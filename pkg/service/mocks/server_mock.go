// Code generated by MockGen. DO NOT EDIT.
// Source: extend-rtu-vivox-authorization-service/pkg/pb (interfaces: MyServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	pb "extend-rtu-vivox-authorization-service/pkg/pb"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMyServiceServer is a mock of MyServiceServer interface.
type MockMyServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockMyServiceServerMockRecorder
}

// MockMyServiceServerMockRecorder is the mock recorder for MockMyServiceServer.
type MockMyServiceServerMockRecorder struct {
	mock *MockMyServiceServer
}

// NewMockMyServiceServer creates a new mock instance.
func NewMockMyServiceServer(ctrl *gomock.Controller) *MockMyServiceServer {
	mock := &MockMyServiceServer{ctrl: ctrl}
	mock.recorder = &MockMyServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyServiceServer) EXPECT() *MockMyServiceServerMockRecorder {
	return m.recorder
}

// GenerateVivoxToken mocks base method.
func (m *MockMyServiceServer) GenerateVivoxToken(arg0 context.Context, arg1 *pb.GenerateVivoxTokenRequest) (*pb.GenerateVivoxTokenRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateVivoxToken", arg0, arg1)
	ret0, _ := ret[0].(*pb.GenerateVivoxTokenRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateVivoxToken indicates an expected call of GenerateVivoxToken.
func (mr *MockMyServiceServerMockRecorder) GenerateVivoxToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateVivoxToken", reflect.TypeOf((*MockMyServiceServer)(nil).GenerateVivoxToken), arg0, arg1)
}

// mustEmbedUnimplementedMyServiceServer mocks base method.
func (m *MockMyServiceServer) mustEmbedUnimplementedMyServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedMyServiceServer")
}

// mustEmbedUnimplementedMyServiceServer indicates an expected call of mustEmbedUnimplementedMyServiceServer.
func (mr *MockMyServiceServerMockRecorder) mustEmbedUnimplementedMyServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedMyServiceServer", reflect.TypeOf((*MockMyServiceServer)(nil).mustEmbedUnimplementedMyServiceServer))
}
